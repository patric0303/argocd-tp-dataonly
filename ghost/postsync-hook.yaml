apiVersion: v1
kind: ServiceAccount
metadata:
  name: tp-user
  namespace: ghost
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ghost-ns-tenant-rolebinding
  namespace: ghost
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: trident-protect-tenant-cluster-role
subjects:
- kind: ServiceAccount
  name: tp-user
  namespace: ghost
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: tp-appvault-reader
rules:
- apiGroups:
  - protect.trident.netapp.io
  resourceNames:
  - argocdtest
  resources:
  - appvaults
  verbs:
  - get
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tp-user-read-appvault-binding
  namespace: trident-protect
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tp-appvault-reader
subjects:
- kind: ServiceAccount
  name: tp-user
  namespace: ghost
apiVersion: batch/v1
kind: Job
metadata:
  name: trident-protect-manage-app
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookFailed
spec:
  template:
    spec:
      serviceAccountName: tp-user
      containers:
      - name: alpine-tp
        image: alpine/k8s:1.31.5
        env:
          - name: APPNAME
            value: "ghost-argocd"
          - name: NAMESPACE
            value: "ghost"
          - name: LABEL
            value: "volume=persistent"
          - name: CLUSTERNAME
            value: "aks-pu-test1-cluster"
          - name: APPVAULT
            value: "argocdtest"
          - name: TP_CLI_VERSION
            value: "24.10.1"
        command: ["/bin/sh"]
        args:
        - -c
        - >
          curl -L -o tridentctl-protect https://github.com/NetApp/tridentctl-protect/releases/download/$TP_CLI_VERSION/tridentctl-protect-linux-amd64 &&
          chmod +x tridentctl-protect &&
          cp ./tridentctl-protect /usr/local/bin/ &&
          echo tridentctl-protect: managing app $APPNAME in namespace $NAMESPACE on cluster $CLUSTERNAME &&
          tridentctl-protect create application $APPNAME --namespaces ${NAMESPACE}\($LABEL\) -n $NAMESPACE &&
          sleep 5 &&
          echo tridenprotect-ctl: creating protection policies for $APPNAME &&
          tridentctl-protect create schedule --app $APPNAME --appvault $APPVAULT --granularity hourly --minute 0 --backup-retention 1 --snapshot-retention 1 -n $NAMESPACE &&
          tridentctl-protect create schedule --app $APPNAME --appvault $APPVAULT --granularity daily --hour 0 --minute 30 --backup-retention 2 --snapshot-retention 2 -n $NAMESPACE
      restartPolicy: Never
  backoffLimit: 1